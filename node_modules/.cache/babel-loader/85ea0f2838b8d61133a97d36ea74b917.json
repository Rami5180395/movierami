{"ast":null,"code":"var _jsxFileName = \"/home/rami/Desktop/ramirezmovie/React-Movie-App/src/components/elements/ImageFrame/ImageFrame.js\";\nimport React from 'react';\nimport { Card, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './ImageFrame.css';\n\nconst ImageFrame = ({\n  movieId,\n  movieName,\n  searchWord,\n  image,\n  personMovieId,\n  clickable,\n  clearFavouriteMovie\n}) => {\n  return /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    xs: 6,\n    lg: 3,\n    className: \"mt-5 animated fadeInLeftBig \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, clickable ?\n  /*#__PURE__*/\n\n  /* if clickable props is true --> go movie, else go movie again but with personal movie id ! */\n  React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: `/movie/${movieId}`,\n      movieName: `${movieName}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-box image-frame  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: image,\n    alt: \"movieImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }\n  }))), clearFavouriteMovie && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"mt-3 btn btn-warning btn-block shadow-lg\",\n    onClick: () => clearFavouriteMovie(movieId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 48\n    }\n  }, \" Bu Filmi Sil \")) : /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: `/movie/${personMovieId}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"  \", /*#__PURE__*/React.createElement(Card, {\n    className: \"bg-dark text-light card-box  image-frame \",\n    style: {\n      maxHeight: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: image,\n    alt: \"movieImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }))));\n};\n\nImageFrame.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string,\n  searchWord: PropTypes.string,\n  id: PropTypes.number,\n  clickable: PropTypes.bool\n};\nexport default ImageFrame;","map":{"version":3,"sources":["/home/rami/Desktop/ramirezmovie/React-Movie-App/src/components/elements/ImageFrame/ImageFrame.js"],"names":["React","Card","Col","Link","PropTypes","ImageFrame","movieId","movieName","searchWord","image","personMovieId","clickable","clearFavouriteMovie","pathname","maxHeight","propTypes","string","number","id","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA,KAAlC;AAAyCC,EAAAA,aAAzC;AAAwDC,EAAAA,SAAxD;AAAmEC,EAAAA;AAAnE,CAAD,KAA8F;AAE7G,sBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAG,CAAV;AAAa,IAAA,EAAE,EAAG,CAAlB;AAAqB,IAAA,EAAE,EAAG,CAA1B;AAA6B,IAAA,SAAS,EAAG,8BAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,SAAS;AAAA;;AAAG;AACV,sBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEE,MAAAA,QAAQ,EAAG,UAASP,OAAQ,EAA9B;AAAiCC,MAAAA,SAAS,EAAG,GAAEA,SAAU;AAAzD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAC,KAAlB;AAAwB,IAAA,GAAG,EAAEE,KAA7B;AAAoC,IAAA,GAAG,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAOQG,mBAAmB,iBAAI;AACnB,IAAA,SAAS,EAAC,0CADS;AAEnB,IAAA,OAAO,EAAG,MAAMA,mBAAmB,CAACN,OAAD,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAP/B,CADO,gBAgBP,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAI;AAACO,MAAAA,QAAQ,EAAG,UAASH,aAAc;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,2CAAlB;AAA8D,IAAA,KAAK,EAAI;AAACI,MAAAA,SAAS,EAAE;AAAZ,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAC,KAAlB;AAAwB,IAAA,GAAG,EAAEL,KAA7B;AAAoC,IAAA,GAAG,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,CAjBR,CADJ;AA0BH,CA5BD;;AA8BAJ,UAAU,CAACU,SAAX,GAAuB;AACnBN,EAAAA,KAAK,EAAGL,SAAS,CAACY,MADC;AAEnBV,EAAAA,OAAO,EAAGF,SAAS,CAACa,MAFD;AAGnBV,EAAAA,SAAS,EAAGH,SAAS,CAACY,MAHH;AAInBR,EAAAA,UAAU,EAAGJ,SAAS,CAACY,MAJJ;AAKnBE,EAAAA,EAAE,EAAGd,SAAS,CAACa,MALI;AAMnBN,EAAAA,SAAS,EAAEP,SAAS,CAACe;AANF,CAAvB;AASA,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport { Card, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './ImageFrame.css';\n \n\nconst ImageFrame = ({ movieId, movieName, searchWord, image, personMovieId, clickable, clearFavouriteMovie }) => {\n\n    return (\n        <Col md= {4} xs= {6} lg ={3} className = \"mt-5 animated fadeInLeftBig \">\n            { clickable ? /* if clickable props is true --> go movie, else go movie again but with personal movie id ! */\n                <React.Fragment>\n                    <Link to={{ pathname: `/movie/${movieId}`, movieName: `${movieName}` }}>\n                        <Card className=\"card-box image-frame  \">\n                            <Card.Img variant=\"top\" src={image} alt=\"movieImg\" />\n                        </Card>\n                    </Link>\n                    {\n                        clearFavouriteMovie && <button\n                            className=\"mt-3 btn btn-warning btn-block shadow-lg\"\n                            onClick={ () => clearFavouriteMovie(movieId) }\n                        > Bu Filmi Sil </button>\n\n                    }\n                </React.Fragment>\n                : \n                <Link to = {{pathname: `/movie/${personMovieId}`}}>  {/* Person Known For Movies*/}\n                <Card className = \"bg-dark text-light card-box  image-frame \" style = {{maxHeight: \"500px\"}}>\n                    <Card.Img variant=\"top\" src={image} alt=\"movieImg\" />\n                </Card>\n                </Link>\n            }            \n        </Col>\n    )\n}\n\nImageFrame.propTypes = {\n    image : PropTypes.string,\n    movieId : PropTypes.number, \n    movieName : PropTypes.string,\n    searchWord : PropTypes.string,\n    id : PropTypes.number,\n    clickable: PropTypes.bool\n}\n\nexport default ImageFrame;\n"]},"metadata":{},"sourceType":"module"}