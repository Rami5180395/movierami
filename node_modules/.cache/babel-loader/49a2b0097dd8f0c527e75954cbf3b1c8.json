{"ast":null,"code":"var _jsxFileName = \"/home/rami/Desktop/ramirezmovie/React-Movie-App/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from '../Home/Home';\nimport FavouriteMovies from '../FavouriteMovies/FavouriteMovies';\nimport Navi from '../Navi/Navi';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../NotFound/NotFound';\nimport ScrollTop from '../elements/ScrollTop/ScrollTop';\nimport PersonInfo from '../PersonInfo/PersonInfo';\nimport alertify from 'alertifyjs';\nimport { addLocalStorage, removeMovieFromStorage } from '../../Functions/StorageFunctions/storageFunctions';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favouriteMovies: []\n    };\n\n    this.getFavouriteMovies = favouritesMovie => {\n      const stateMovies = this.state.favouriteMovies;\n      const addedMovie = stateMovies.find(movie => movie.id === favouritesMovie.id);\n\n      if (!addedMovie) {\n        this.setState({ ...this.state,\n          favouriteMovies: [...stateMovies, favouritesMovie]\n        });\n        addLocalStorage(favouritesMovie);\n        alertify.success(\"Film Başarı İle Eklendi\", 2);\n      } else {\n        alertify.error(\"Bu film zaten listenizde bulunuyor\", 2);\n      }\n    };\n\n    this.clearFavouriteMovie = id => {\n      const filterMovie = this.state.favouriteMovies.filter(movie => movie.id !== id);\n      this.setState({\n        favouriteMovies: filterMovie\n      });\n      alertify.success(\" Bu Film Başarı İle Silindi\", 2);\n      removeMovieFromStorage(id);\n    };\n\n    this.clearAllFavouriteMovies = () => {\n      this.setState({\n        favouriteMovies: []\n      });\n\n      if (this.state.favouriteMovies.length) {\n        alertify.success(\" Bütün Filmler Başarı İle Silindi\", 2);\n      }\n\n      localStorage.removeItem(\"favouriteMovies\");\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"favouriteMovies\")) {\n      // First Contact this App \n      let movies = JSON.parse(localStorage.getItem('favouriteMovies'));\n      this.setState({ ...this.state,\n        favouriteMovies: movies\n      });\n    }\n  }\n\n  render() {\n    const {\n      favouriteMovies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ScrollTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Navi, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/favourites\",\n      render: props => /*#__PURE__*/React.createElement(FavouriteMovies, Object.assign({}, props, {\n        favouriteMovies: favouriteMovies,\n        clearAllFavouriteMovies: this.clearAllFavouriteMovies,\n        clearFavouriteMovie: this.clearFavouriteMovie,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 41\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/movie/:movieId\",\n      render: props => /*#__PURE__*/React.createElement(Movie, Object.assign({}, props, {\n        getFavouriteMovies: this.getFavouriteMovies,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/person/:personId\",\n      component: PersonInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rami/Desktop/ramirezmovie/React-Movie-App/src/components/App/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Home","FavouriteMovies","Navi","Movie","NotFound","ScrollTop","PersonInfo","alertify","addLocalStorage","removeMovieFromStorage","App","state","favouriteMovies","getFavouriteMovies","favouritesMovie","stateMovies","addedMovie","find","movie","id","setState","success","error","clearFavouriteMovie","filterMovie","filter","clearAllFavouriteMovies","length","localStorage","removeItem","componentDidMount","getItem","movies","JSON","parse","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from '../Home/Home';\nimport FavouriteMovies from '../FavouriteMovies/FavouriteMovies';\nimport Navi from '../Navi/Navi';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../NotFound/NotFound';\nimport ScrollTop from '../elements/ScrollTop/ScrollTop';\nimport PersonInfo from '../PersonInfo/PersonInfo';\nimport alertify from 'alertifyjs';\nimport { addLocalStorage, removeMovieFromStorage  } from '../../Functions/StorageFunctions/storageFunctions';\n\nclass App extends Component {\n\n    state = {\n        favouriteMovies: [],\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(\"favouriteMovies\")) { // First Contact this App \n          let movies = JSON.parse(localStorage.getItem('favouriteMovies'));\n          this.setState({\n            ...this.state,\n            favouriteMovies : movies,\n          })\n        }\n      }\n\n    getFavouriteMovies = favouritesMovie => {\n        const stateMovies = this.state.favouriteMovies;\n        const addedMovie = stateMovies.find(movie => movie.id === favouritesMovie.id);\n        if (!addedMovie) {\n            this.setState({\n                ...this.state,\n                favouriteMovies: [...stateMovies, favouritesMovie],\n            })\n            addLocalStorage(favouritesMovie)\n            alertify.success(\"Film Başarı İle Eklendi\", 2)\n        }\n        else {\n            alertify.error(\"Bu film zaten listenizde bulunuyor\", 2)\n\n        }\n    }\n\n    clearFavouriteMovie = id => {\n        const filterMovie = this.state.favouriteMovies.filter(movie => movie.id !== id);\n        this.setState({\n            favouriteMovies: filterMovie\n        })\n        alertify.success(\" Bu Film Başarı İle Silindi\", 2)\n        removeMovieFromStorage(id)\n    }\n\n    clearAllFavouriteMovies = () => {\n        this.setState({\n            favouriteMovies: []\n        })\n        if (this.state.favouriteMovies.length) {\n            alertify.success(\" Bütün Filmler Başarı İle Silindi\", 2)\n        }\n\n        localStorage.removeItem(\"favouriteMovies\");\n    }\n\n\n    render() {\n\n        const { favouriteMovies } = this.state;\n\n        return (\n            <Router>\n                <ScrollTop>\n                    <React.Fragment>\n                        <Navi />\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/favourites\"\n                                render = {\n                                    props => (\n                                        <FavouriteMovies\n                                            {...props}\n                                            favouriteMovies={favouriteMovies}\n                                            clearAllFavouriteMovies={this.clearAllFavouriteMovies}\n                                            clearFavouriteMovie={this.clearFavouriteMovie}\n                                        /> \n                                    )\n                                }\n                            />\n                            <Route exact path=\"/movie/:movieId\"\n                                render={\n                                    props => (\n                                        <Movie\n                                            {...props}\n                                            getFavouriteMovies={this.getFavouriteMovies}\n                                        />\n                                    )\n                                }\n                            />\n                            <Route exact path=\"/person/:personId\" component={PersonInfo} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </React.Fragment>\n                </ScrollTop>\n            </Router>\n        )\n    }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}